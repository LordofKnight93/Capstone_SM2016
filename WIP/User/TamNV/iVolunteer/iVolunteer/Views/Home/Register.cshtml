@model iVolunteer.Models.Data_Definition_Class.ViewModel.RegisterModel
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container" style="margin-top: 50px">
        <form class="register-form">

            <!-- Form 1 -->
            <div id="register-form-1" class="row background-container">
                <div class="col-md-9 col-md-offset-15">
                    <div class="card-panel">
                        <div class="row">
                            <h3 style="text-align: center; font-weight: bold; color: #049f88; margin-bottom: 40px">Tình nguyện viên mới</h3>
                        </div>
                        <div class="row">
                            <div class="col-sm-10 col-sm-offset-1">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                                <!-- User name -->
                                <div class="row">
                                    <div class="col-xs-4 register-label">
                                        @Html.LabelFor(model => model.RealName, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-xs-5 text-input">
                                        @Html.EditorFor(model => model.RealName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.RealName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <!-- Email -->
                                <div class="row">
                                    <div class="col-xs-4 register-label">
                                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-xs-5 text-input">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <!-- Phone -->
                                <div class="row">
                                    <div class="col-xs-4 register-label">
                                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label " })
                                    </div>
                                    <div class="col-xs-5 text-input">
                                        <input type="number" name="txtPhone" class="form-control" id="phone" placeholder="Nhập số điện thoại ...">
                                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>

                                <!-- Password -->
                                <div class="row">
                                    <div class="col-xs-4 register-label">
                                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label " })
                                    </div>
                                    <div class="col-xs-5 text-input">
                                        @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <!-- Confirm password -->
                                <div class="row">
                                    <div class="col-xs-4 register-label">
                                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label " })
                                    </div>
                                    <div class="col-xs-5 text-input">
                                        @Html.PasswordFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <!-- Date of birth -->
                                <div class="row">
                                    <div class="col-xs-4 register-label">
                                        @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-xs-5 text-input">
                                        @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <!-- Identify Number -->
                                <div class="row">
                                    <div class="col-xs-4 register-label">
                                        @Html.LabelFor(model => model.IdentifyID, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-xs-5 text-input">
                                        @Html.EditorFor(model => model.IdentifyID, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.IdentifyID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <!-- Gender -->
                                <div class="row">
                                    <div class="col-xs-4 register-label">
                                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-xs-5 text-input">
                                        <div class="col-sm-6">
                                            <div class="radio">
                                                @Html.EditorFor(model => model.Gender)
                                                <label for="rdRegisMale">
                                                    Nam
                                                </label>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="radio">
                                                <input type="radio" name="rdRegisGender" id="rdRegisFemale" value="">
                                                <label for="rdRegisFemale">
                                                    Nữ
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-xs-4 register-label">
                                       @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-xs-5 text-input">
                                       @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                
                                <div class="row">
                                    <div class="col-xs-5"></div>
                                    <div class="col-xs-4">
                                        <div class="text-danger">
                                            @ViewBag.Message
                                        </div>
                                    </div>
                                </div>
                                @*Button*@
                                <div class="row">
                                    <div class="col-xs-2 col-xs-offset-7 text-input" style="text-align: center">
                                        <button type="button" class="btn btn-info" onclick="location.href='@Url.Action("FrontPage","Home")'">HỦY BỎ</button>
                                    </div>
                                    <div class="col-xs-2 text-input">
                                        <button type="submit" class="btn btn-register">HOÀN TẤT</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </form>                <!-- Button -->
    </div>

}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/phucvt_custom.js"></script>

@*@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>RegisterModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RealName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RealName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RealName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Gender)
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdentifyID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdentifyID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdentifyID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @ViewBag.Message
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@
