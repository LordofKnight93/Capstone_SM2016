@model iVolunteer.Models.MongoDB.EmbeddedClass.ItemClass.SubTask
@{ string idupdate = "#addSubTaskForm" + ViewBag.MainTaskID; }
@using (Ajax.BeginForm("AddSubTask", "Plan", new { planPhaseID = ViewBag.PlanPhaseID, userRole = ViewBag.UserRole, mainTaskID = ViewBag.MainTaskID }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "subtaskList", OnSuccess = "onSuccess" }, new { @id = "formValidation", @class = "register-form", @style = "margin-top: 10px" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div style="text-align: center">
            @ViewBag.Message
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="payer" class="control-label col-md-2">Người thực hiện</label>
            <div class="col-md-10">
                <input type="hidden" id="txtUserID" name="txtUserID" />
                <input type="text" class="form-control" name="txtAssign" id="assign" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Deadline, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                    @Html.EditorFor(model => model.Deadline, new { htmlAttributes = new { @id = "subtaskDeadline", @class = "form-control datetimepicker", @data_format = "dd/MM/yyyy hh:mm:ss", @type = "date" } })
                    @Html.ValidationMessageFor(model => model.Deadline, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Priolity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Priolity, new SelectListItem[] {
                                                                    new SelectListItem() {Text = "THẤP", Value = "1" },
                                                                    new SelectListItem() {Text = "BÌNH THƯỜNG", Value = "2" },
                                                                    new SelectListItem() {Text = "CAO", Value = "3" } },
                                                      new { @class = "form-control", @type = "date" })
                @Html.ValidationMessageFor(model => model.Priolity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
    <script type="text/javascript">
        //$(function () {
        //    $('#subtaskDeadline').datetimepicker();
        //});
        var onSuccess = function () {
            console.log("pass add sub task vadidate");
            console.log("@idupdate");
            // enable unobtrusive validation for the contents
            // that was injected into the <div id="result"></div> node
            $.validator.unobtrusive.parse($("#addSubTaskForm"));
        };
        $(document).ready(function () {
            @{ string url = "/Project/ProjectMembersToAssign?planPhaseID=" + @ViewBag.PlanPhaseID; }
            // Search Member
            $("#assign").autocomplete({
                source: function (request, response) {

                    $.ajax({
                        url: "@url",
                        dataType: "json",
                        type: "POST",
                        data: {
                            name: request.term
                        },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.DisplayName,
                                    value: item.UserID
                                }
                            }))
                        },
                        error: function () {
                            alert("Error");
                        }
                    });
                },
                select: function (event, ui) {
                    $("#txtUserID").val(ui.item.value);
                    $("#assign").val(ui.item.label);
                    return false;
                }
            });
        });
    </script>
